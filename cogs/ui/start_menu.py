import discord
from discord.ui import View, Button
from utils.helpers import load_data
from .expense_menu import MenuView
from ..income.menu import IncomeMenuView
from .overall_report import OverallReportView


class StartView(View):
    def __init__(self, user_id):
        super().__init__(timeout=None)
        self.user_id = str(user_id)

    @discord.ui.button(label="üí∞ –ü—Ä–∏–±—É—Ç–∫–∏", style=discord.ButtonStyle.success)
    async def income_menu(self, interaction: discord.Interaction, button: Button):
        key = (interaction.channel.id, interaction.user.id)
        cog = interaction.client.get_cog("UI")

        if interaction.response.is_done():
            await interaction.followup.send(
                "üìà –ú–µ–Ω—é –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–∏–±—É—Ç–∫–∞–º–∏:",
                ephemeral=True,
                view=IncomeMenuView(self.user_id)
            )
        else:
            await interaction.response.send_message(
                "üìà –ú–µ–Ω—é –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–∏–±—É—Ç–∫–∞–º–∏:",
                ephemeral=True,
                view=IncomeMenuView(self.user_id)
            )

        msg = await interaction.original_response()
        cog.active_messages.setdefault(key, []).append(msg.id)

    @discord.ui.button(label="üí∏ –í–∏—Ç—Ä–∞—Ç–∏", style=discord.ButtonStyle.primary)
    async def expense_menu(self, interaction: discord.Interaction, button: Button):
        key = (interaction.channel.id, interaction.user.id)
        cog = interaction.client.get_cog("UI")

        data = load_data("data/categories.json")
        categories = data.get(self.user_id, [])
        await interaction.response.send_message(
            "üí∏ –ú–µ–Ω—é –∫–µ—Ä—É–≤–∞–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç–∞–º–∏:",
            ephemeral=True,
            view=MenuView(self.user_id, categories)
        )

        msg = await interaction.original_response()
        cog.active_messages.setdefault(key, []).append(msg.id)

    @discord.ui.button(label="üìã –ó–∞–≥–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç", style=discord.ButtonStyle.secondary)
    async def overall_report(self, interaction: discord.Interaction, button: Button):
        key = (interaction.channel.id, interaction.user.id)
        cog = interaction.client.get_cog("UI")

        await interaction.response.send_message(
            "–û–±–µ—Ä—ñ—Ç—å –ø–µ—Ä—ñ–æ–¥ –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –∑–≤—ñ—Ç—É:",
            ephemeral=True,
            view=OverallReportView(self.user_id)
        )
        msg = await interaction.original_response()
        cog.active_messages.setdefault(key, []).append(msg.id)

    @discord.ui.button(label="üìÑ PDF –∑–≤—ñ—Ç", style=discord.ButtonStyle.secondary)
    async def static_pdf_report(self, interaction: discord.Interaction, button: Button):
        from utils.pdf_report import send_overall_pdf_report
        await send_overall_pdf_report(interaction)



    @discord.ui.button(label="‚ùì", style=discord.ButtonStyle.secondary)
    async def help_info(self, interaction: discord.Interaction, button: Button):
        key = (interaction.channel.id, interaction.user.id)
        cog = interaction.client.get_cog("UI")

        await interaction.response.send_message(
            content=(
                "üìñ –û–ø–∏—Å –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞:\n"
                "üìà –ü—Ä–∏–±—É—Ç–∫–∏ ‚Äî –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–≥–ª—è–¥ –¥–æ—Ö–æ–¥—ñ–≤.\n"
                "üí∏ –í–∏—Ç—Ä–∞—Ç–∏ ‚Äî –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–≥–ª—è–¥ –≤–∏—Ç—Ä–∞—Ç.\n"
                "üìã –ó–∞–≥–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç ‚Äî –ø–µ—Ä–µ–≥–ª—è–¥ –±–∞–ª–∞–Ω—Å—É.\n"
                "‚ÑπÔ∏è –£—Å—ñ –¥—ñ—ó —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ —Ç–∞ –≤—ñ–∫–Ω–∞!"
            ),
            ephemeral=True
        )
        msg = await interaction.original_response()
        cog.active_messages.setdefault(key, []).append(msg.id)
